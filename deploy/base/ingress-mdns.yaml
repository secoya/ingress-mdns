---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: ingress-mdns
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ingress-mdns
rules:
  - apiGroups: [extensions]
    resources: [ingresses]
    verbs: [list, watch]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ingress-mdns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-mdns
subjects:
- kind: ServiceAccount
  name: ingress-mdns
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: ingress-mdns
spec:
  strategy:
    rollingUpdate:
      # We bind to fixed host ports on the host network,
      # make sure the old pod is killed before updating to a new one
      maxUnavailable: '100%'
  selector:
    matchLabels:
      name: ingress-mdns
  template:
    metadata:
      labels:
        name: ingress-mdns
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      serviceAccountName: ingress-mdns
      terminationGracePeriodSeconds: 60
      containers:
      - name: ingress-mdns
        image: cr.orbit.dev/dev/ingress-mdns
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        securityContext:
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      volumes:
      - name: tmp-volume
        emptyDir: {}
